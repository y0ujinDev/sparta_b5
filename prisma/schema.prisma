generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  password      String
  nickname      String
  point         Int          @default(1000000)
  isOwner       Boolean      @default(false) @map("is_owner")
  emailVerified Boolean      @default(false) @map("email_verified")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  reviews       Reviews[]
  restaurant    Restaurants?
  order         Orders[]
  cart          Carts[]

  @@map("Users")
}

model Reviews {
  id           Int         @id @default(autoincrement())
  userId       Int         @map("user_id")
  orderId      Int         @unique @map("order_id")
  restaurantId Int         @map("restaurant_id")
  score        Int
  content      String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         Users       @relation(fields: [userId], references: [id])
  order        Orders      @relation(fields: [orderId], references: [id])
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])

  @@map("Reviews")
}

model Restaurants {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  content   String
  category  String
  onwerId   Int       @unique @map("owner_id")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      Users     @relation(fields: [onwerId], references: [id])
  menus     Menus[]
  cart      Carts[]
  order     Orders[]
  review    Reviews[]

  @@map("Restaurants")
}

model Orders {
  id             Int         @id @default(autoincrement())
  name           String
  price          Int
  deliveryStatus String      @default("ORDERED") @map("delivery_status")
  userId         Int         @map("user_id")
  restaurantId   Int         @map("restaurant_id")
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  user           Users       @relation(fields: [userId], references: [id])
  restaurant     Restaurants @relation(fields: [restaurantId], references: [id])
  review         Reviews?

  @@map("Orders")
}

model Menus {
  id           Int         @id @default(autoincrement())
  name         String
  price        Int
  image        String
  content      String
  restaurantId Int         @map("restaurant_id")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  cartItmes    CartItems[]

  @@map("menus")
}

model Carts {
  id           Int         @id @default(autoincrement())
  userId       Int         @map("user_id")
  restaurantId Int         @map("restaurant_id")
  cartItmes    CartItems[]
  user         Users       @relation(fields: [userId], references: [id])
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])

  @@map("Carts")
}

model CartItems {
  id       Int   @id @default(autoincrement())
  cartId   Int   @map("cart_id")
  menuId   Int   @map("menu_id")
  quantity Int
  cart     Carts @relation(fields: [cartId], references: [id])
  menus    Menus @relation(fields: [menuId], references: [id])

  @@map("Cart_items")
}
