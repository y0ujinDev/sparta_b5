generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  password      String
  nickname      String
  point         Int          @default(1000000)
  isOwner       Boolean      @default(false) @map("is_owner")
  emailVerified Boolean      @default(false) @map("email_verified")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  order         Orders[]
  restaurant    Restaurants?
  reviews       Reviews[]

  @@map("Users")
}

model Reviews {
  id           Int         @id @default(autoincrement())
  userId       Int         @map("user_id")
  restaurantId Int         @map("restaurant_id")
  score        Int
  content      String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  user         Users       @relation(fields: [userId], references: [id])

  @@index([restaurantId], map: "Reviews_restaurant_id_fkey")
  @@index([userId], map: "Reviews_user_id_fkey")
  @@map("Reviews")
}

model Restaurants {
  id         Int       @id @default(autoincrement())
  name       String
  address    String
  content    String
  menu       String
  category   String
  onwerId    Int       @unique @map("owner_id")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  owner_menu Menus[]
  user       Users     @relation(fields: [onwerId], references: [id])
  reviews    Reviews[]

  @@map("Restaurants")
}

model Orders {
  id             Int      @id @default(autoincrement())
  name           String
  price          Int
  deliveryStatus String   @default("ORDERED") @map("delivery_status")
  userId         Int      @map("user_id")
  menuId         Int      @map("menu_id")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  owner_menu     Menus    @relation(fields: [menuId], references: [id])
  user           Users    @relation(fields: [userId], references: [id])

  @@index([menuId], map: "Orders_menu_id_fkey")
  @@index([userId], map: "Orders_user_id_fkey")
  @@map("Orders")
}

model Menus {
  id           Int         @id @default(autoincrement())
  name         String
  price        Int
  image        String
  content      String
  restaurantId Int         @map("restaurant_id")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  order        Orders[]
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])

  @@index([restaurantId], map: "Owner_menu_restaurant_id_fkey")
  @@map("Owner_menu")
}
